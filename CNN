# -*- coding: utf-8 -*-
"""HandDigits.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/191OZJISTh08Rf9W77ULXOl2plKrWq9d6
"""

import matplotlib.pyplot as plt
from sklearn import datasets, svm, metrics
digits = datasets.load_digits()

images_and_labels = list(zip(digits.images, digits.target))
for index, (image, label) in enumerate(images_and_labels[:8]):
    plt.subplot(2, 8, index + 1)
    plt.axis('off')
    plt.imshow(image, cmap=plt.cm.gray_r, interpolation='nearest')
    plt.title('%i' % label)

n_samples = len(digits.images)
data = digits.images.reshape((n_samples, -1))

# creer un classifier:  vector classifier
classifier = svm.SVC(gamma=0.004)

#apprendre les chiffres a apartir de la première moitié
classifier.fit(data[:n_samples // 2], digits.target[:n_samples // 2])

# predire les digits dans la deuxieme partie:
expected = digits.target[n_samples // 2:]
predicted = classifier.predict(data[n_samples // 2:])


images_and_predictions = list(zip(digits.images[n_samples // 2:], predicted))
for index, (image, prediction) in enumerate(images_and_predictions[:4]):
    plt.subplot(2, 4, index + 5)
    plt.axis('off')
    plt.imshow(image, cmap=plt.cm.gray_r, interpolation='nearest')
    plt.title('Prediction: %i' % prediction)

plt.show()
